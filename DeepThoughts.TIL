/*
Larry Wong, Eric Wong, Joshua Weiner - Walking in a Weiner Wongerland
APCS2 - pd08
HW14 - Hello knights, welcome to the maze
2018 - 03 - 05
*/
Q1: From any starting position, can an open tour always be found? Explain.
No, there are some positions where an open tour cannot be found. In class there was an example of this, where we started in the
upper left corner and there were no possible tours.

Q2: Same, but for closed tour.
not possible for odd numbered boards, because a knight will always change color when it moves. After an odd number of moves,
the knight will always be at a different color and thus cannot be closed.

Q3: How do you explain the increase in execution time as n increases?
As n increases, the amount of checks for positions for the knights tour increases by about 2n, with each new space accompanied with 8 different checks at maximum. Since each tour requires each space to be visited, every time n is increased another row and column have to be checked as well.

Q4: Thoughts on optimization?
If the board is even (as in the number of rows and columns are both even numbers), all possible solutions can be checked just by checking one quarter of the board. This is because each solution for each quarter can be flipped or rotated to match onto any other solution.
Furthermore, we can try to implement Warnsdorf's rule, and place each knight in the spaces that will result in the least number of future moves. This works by checking the total number of steps that the algorithm will have to go through for each possible placement of the knight. When the move with the least number of future moves is found, the knight will be placed in that position.

Algorithm:
  - Begin at the "start position"
  - For each path space denoted with a ~, check all four spaces immediately adjacent to the current space.
    - If one of these surrounding spaces is a "~", update the position to that space
    - Otherwise, if there are no ~ around, backtrack to the last spot with multiple options to move, similar to the knight's tour.
  - Keep moving until the final position is reached, denoted with a "@"
